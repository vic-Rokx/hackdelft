import sqlite3 from "sqlite3";
import { product } from "./util";
import { equivalence } from "./equivalence"

const db = new sqlite3.Database("./products.db");

type sqlproductentry = {
    name: string,
    url: string,
    brand: string,
    type: string,
    pore_size_mu: string,
    max_temperature_c: string,
    max_temperature_f: string,
    adapter_1: string,
    adapter_2: string,
    o_ring_gasket: string,
    length_in_inch: string,
    length_in_cm: string,
    outer_diameter_inch: string,
    quantity_per_case: string,
    volume_l: string,
    package: string,
    shipping_weight_kg: string,
    dosage_ppm: string,
    caco3: string,
    caso4: string,
    baso4: string,
    srso4: string,
    caf2: string,
    capo4: string,
    fe: string,
    mn: string,
    al: string,
    silica: string,
    wt_p: string,
    wt_n: string,
    turbidity_ntu: string,
    inlet_pressure_bar: string,
    inlet_pressure_psi: string,
    number_of_stacks: string,
    type_of_stack: string,
    recovery: string,
    stages: string,
    ph_range: string,
    flow_m3h: string,
    flow_rate_gpm_ft2: string,
    shipping_weight_lbs: string,
    flow_l_min: string,
    inlet: string,
    outlet: string,
    material: string,
    port_type: string,
    port_size_in_inch: string,
    port_size_out_inch: string,
    number_of_cartridges: string,
    weight_kg: string,
    weight_lb: string,
    flow_gpm: string,
    shipping_size_of_case_in_cm: string,
    carton_shipping_weight_in_lbs: string,
    carton_shipping_weight_in_kg: string,
    replaced_by: string,
    area_m2: string,
    area_ft2: string,
    flow_l_h: string,
    material_housing: string,
    diameter_bores_mm: string,
    diameter_fiber_od_mm: string,
    width_mm: string,
    width_inch: string,
    length_mm: string,
    application: string,
    configuration: string,
    feed_connector_inch: string,
    permeate_connection_inch: string,
    max_pressure_psi: string,
    max_pressure_bar: string,
    diameter_bores_inch: string,
    diameter_fiber_od_inch: string,
    flow_gfd: string,
    average_nacl_rejection_percentage: string,
    minimum_nacl_rejection_percentage: string,
    max_pressure_kpa: string,
    membrane_active_area_ft2: string,
    membrane_active_area_m2: string,
    flow_gpd: string,
    flow_m3_day: string,
    replaced_part_number: string,
    remarks: string,
    average_mgso4l_rejection_percentage: string,
    membrane_thickness_mum: string,
    ion_exchange_capacity_meq_g: string,
    water_transfer_ml_f: string,
    sucrose_transfer_g_f: string,
    water_content: string,
    resin_type: string,
}

const serializeProduct = (newproduct: product): sqlproductentry => {
    const productentry: sqlproductentry = {
        name: newproduct.name,
        url: newproduct.url,
        brand: null,
        type: null,
        pore_size_mu: null,
        max_temperature_c: null,
        max_temperature_f: null,
        adapter_1: null,
        adapter_2: null,
        o_ring_gasket: null,
        length_in_inch: null,
        length_in_cm: null,
        outer_diameter_inch: null,
        quantity_per_case: null,
        volume_l: null,
        package: null,
        shipping_weight_kg: null,
        dosage_ppm: null,
        caco3: null,
        caso4: null,
        baso4: null,
        srso4: null,
        caf2: null,
        capo4: null,
        fe: null,
        mn: null,
        al: null,
        silica: null,
        wt_p: null,
        wt_n: null,
        turbidity_ntu: null,
        inlet_pressure_bar: null,
        inlet_pressure_psi: null,
        number_of_stacks: null,
        type_of_stack: null,
        recovery: null,
        stages: null,
        ph_range: null,
        flow_m3h: null,
        flow_rate_gpm_ft2: null,
        shipping_weight_lbs: null,
        flow_l_min: null,
        inlet: null,
        outlet: null,
        material: null,
        port_type: null,
        port_size_in_inch: null,
        port_size_out_inch: null,
        number_of_cartridges: null,
        weight_kg: null,
        weight_lb: null,
        flow_gpm: null,
        shipping_size_of_case_in_cm: null,
        carton_shipping_weight_in_lbs: null,
        carton_shipping_weight_in_kg: null,
        replaced_by: null,
        area_m2: null,
        area_ft2: null,
        flow_l_h: null,
        material_housing: null,
        diameter_bores_mm: null,
        diameter_fiber_od_mm: null,
        width_mm: null,
        width_inch: null,
        length_mm: null,
        application: null,
        configuration: null,
        feed_connector_inch: null,
        permeate_connection_inch: null,
        max_pressure_psi: null,
        max_pressure_bar: null,
        diameter_bores_inch: null,
        diameter_fiber_od_inch: null,
        flow_gfd: null,
        average_nacl_rejection_percentage: null,
        minimum_nacl_rejection_percentage: null,
        max_pressure_kpa: null,
        membrane_active_area_ft2: null,
        membrane_active_area_m2: null,
        flow_gpd: null,
        flow_m3_day: null,
        replaced_part_number: null,
        remarks: null,
        average_mgso4l_rejection_percentage: null,
        membrane_thickness_mum: null,
        ion_exchange_capacity_meq_g: null,
        water_transfer_ml_f: null,
        sucrose_transfer_g_f: null,
        water_content: null,
        resin_type: null,
    }

    for (let i = 0; i < newproduct.attributes.length; i++) {
        const attribute = newproduct.attributes[i];

        const field = attribute.field;
        const value = attribute.value;
        const key = equivalence.find((e) => e.label === field).value;

        productentry[key] = value;
    }

    return productentry;
}

export const populateDB = (products: product[]) => {
    db.serialize(() => {
        db.run("CREATE TABLE products (name TEXT, url TEXT, brand TEXT, type TEXT, pore_size_mu TEXT, max_temperature_c TEXT, max_temperature_f TEXT, adapter_1 TEXT, adapter_2 TEXT, o_ring_gasket TEXT, length_in_inch TEXT, length_in_cm TEXT, outer_diameter_inch TEXT, quantity_per_case TEXT, volume_l TEXT, package TEXT, shipping_weight_kg TEXT, dosage_ppm TEXT, caco3 TEXT, caso4 TEXT, baso4 TEXT, srso4 TEXT, caf2 TEXT, capo4 TEXT, fe TEXT, mn TEXT, al TEXT, silica TEXT, wt_p TEXT, wt_n TEXT, turbidity_ntu TEXT, inlet_pressure_bar TEXT, inlet_pressure_psi TEXT, number_of_stacks TEXT, type_of_stack TEXT, recovery TEXT, stages TEXT, ph_range TEXT, flow_m3h TEXT, flow_rate_gpm_ft2 TEXT, shipping_weight_lbs TEXT, flow_l_min TEXT, inlet TEXT, outlet TEXT, material TEXT, port_type TEXT, port_size_in_inch TEXT, port_size_out_inch TEXT, number_of_cartridges TEXT, weight_kg TEXT, weight_lb TEXT, flow_gpm TEXT, shipping_size_of_case_in_cm TEXT, carton_shipping_weight_in_lbs TEXT, carton_shipping_weight_in_kg TEXT, replaced_by TEXT, area_m2 TEXT, area_ft2 TEXT, flow_l_h TEXT, material_housing TEXT, diameter_bores_mm TEXT, diameter_fiber_od_mm TEXT, width_mm TEXT, width_inch TEXT, length_mm TEXT, application TEXT, configuration TEXT, feed_connector_inch TEXT, permeate_connection_inch TEXT, max_pressure_psi TEXT, max_pressure_bar TEXT, diameter_bores_inch TEXT, diameter_fiber_od_inch TEXT, flow_gfd TEXT, average_nacl_rejection_percentage TEXT, minimum_nacl_rejection_percentage TEXT, max_pressure_kpa TEXT, membrane_active_area_ft2 TEXT, membrane_active_area_m2 TEXT, flow_gpd TEXT, flow_m3_day TEXT, replaced_part_number TEXT, remarks TEXT, average_mgso4l_rejection_percentage TEXT, membrane_thickness_mum TEXT, ion_exchange_capacity_meq_g TEXT, water_transfer_ml_f TEXT, sucrose_transfer_g_f TEXT, water_content TEXT, resin_type TEXT)");

        const stmt = db.prepare("INSERT INTO products (name, url, brand, type, pore_size_mu, max_temperature_c, max_temperature_f, adapter_1, adapter_2, o_ring_gasket, length_in_inch, length_in_cm, outer_diameter_inch, quantity_per_case, volume_l, package, shipping_weight_kg, dosage_ppm, caco3, caso4, baso4, srso4, caf2, capo4, fe, mn, al, silica, wt_p, wt_n, turbidity_ntu, inlet_pressure_bar, inlet_pressure_psi, number_of_stacks, type_of_stack, recovery, stages, ph_range, flow_m3h, flow_rate_gpm_ft2, shipping_weight_lbs, flow_l_min, inlet, outlet, material, port_type, port_size_in_inch, port_size_out_inch, number_of_cartridges, weight_kg, weight_lb, flow_gpm, shipping_size_of_case_in_cm, carton_shipping_weight_in_lbs, carton_shipping_weight_in_kg, replaced_by, area_m2, area_ft2, flow_l_h, material_housing, diameter_bores_mm, diameter_fiber_od_mm, width_mm, width_inch, length_mm, application, configuration, feed_connector_inch, permeate_connection_inch, max_pressure_psi, max_pressure_bar, diameter_bores_inch, diameter_fiber_od_inch, flow_gfd, average_nacl_rejection_percentage, minimum_nacl_rejection_percentage, max_pressure_kpa, membrane_active_area_ft2, membrane_active_area_m2, flow_gpd, flow_m3_day, replaced_part_number, remarks, average_mgso4l_rejection_percentage, membrane_thickness_mum, ion_exchange_capacity_meq_g, water_transfer_ml_f, sucrose_transfer_g_f, water_content, resin_type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)")
        for (let i = 0; i < products.length; i++) {
            stmt.run(Object.values(serializeProduct(products[i])));
        }

        db.each("SELECT * FROM products", (err, row: any) => {
            console.log(row);
        });
    })
}